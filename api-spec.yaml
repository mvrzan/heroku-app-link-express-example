openapi: 3.0.3
info:
  title: Heroku App Link Express Example API
  description: API for integrating with Salesforce through Heroku App Link
  version: 1.0.0
servers:
  - url: http://127.0.0.1:3000
    description: Local development server
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        error:
          type: string
          description: Error type or code
    SuccessMessage:
      type: object
      properties:
        message:
          type: string
          description: Success message
    Segment:
      type: object
      properties:
        name:
          type: string
          description: Display name of the segment
        apiName:
          type: string
          description: API name of the segment
        dataSpace:
          type: string
          description: Data space the segment belongs to
        segmentDefinitionId:
          type: string
          description: Market segment definition ID
        segmentId:
          type: string
          description: Market segment ID
        segmentStatus:
          type: string
          description: Status of the segment
        publishStatus:
          type: string
          description: Publication status of the segment
        segmentType:
          type: string
          description: Type of the segment
    ActivationTarget:
      type: object
      properties:
        name:
        createdBy:
          type: string
          description: ID of the user who created the activation target
        createdDate:
          type: string
          format: date-time
          description: Creation date and time
        dataSpace:
          type: string
          description: Data space for the activation target
        activationTargetId:
          type: string
          description: Unique identifier for the activation target
        lastModifiedBy:
          type: string
          description: ID of the user who last modified the activation target
        lastModifiedDate:
          type: string
          format: date-time
          description: Last modification date and time
        activationTargetName:
          type: string
          description: Name of the activation target
        platformName:
          type: string
          description: Platform name
        platformType:
          type: string
          description: Type of platform
        activationTargetStatus:
          type: string
          description: Status of the activation target
    SegmentsResponse:
      type: object
      properties:
        message:
          type: string
          description: Response message
        segments:
          type: array
          items:
            $ref: "#/components/schemas/Segment"
    JokeResponse:
      type: object
      properties:
        message:
          type: string
          description: Response message
        joke:
          type: string
          description: A joke text
    TodosResponse:
      type: object
      properties:
        message:
          type: string
          description: Response message
        todos:
          type: object
          description: Todo item
          properties:
            userId:
              type: integer
              description: ID of the user who owns this todo
            id:
              type: integer
              description: Unique identifier for the todo item
            title:
              type: string
              description: Title of the todo item
            completed:
              type: boolean
              description: Whether the todo item is completed
    TodoCreateRequest:
      type: object
      properties:
        userId:
          type: integer
          description: User ID for the todo
        title:
          type: string
          description: Title of the todo
        completed:
          type: boolean
          description: Completion status of the todo
    ActivationTargetsResponse:
      type: object
      properties:
        message:
          type: string
          description: Response message
        activationTargets:
          type: array
          description: List of Data Cloud activation targets
          items:
            $ref: "#/components/schemas/ActivationTarget"
    LimitsResponse:
      type: object
      properties:
        message:
          type: string
          description: Response message
        limits:
          type: object
          description: Data Cloud limits information
          additionalProperties:
            type: object
            properties:
              Max:
                type: integer
                description: Maximum limit value
              Remaining:
                type: integer
                description: Remaining value for this limit
            example:
              AnalyticsExternalDataSizeMB:
                Max: 40960
                Remaining: 40960
              DailyApiRequests:
                Max: 441450
                Remaining: 436699
              DailyBulkApiBatches:
                Max: 15000
                Remaining: 15000
    SegmentCreateRequest:
      type: string
  securitySchemes:
    salesforceOAuth:
      type: http
      scheme: bearer
      description: Salesforce OAuth token
    clientContext:
      type: apiKey
      in: header
      name: X-Client-Context
      description: Salesforce client context header

paths:
  /v1/joke:
    get:
      summary: Get a joke
      description: Retrieves a random joke
      operationId: getJoke
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dummy:
                  type: string
                  description: Dummy parameter to satisfy system requirements
                  example: "dummy_value"
      responses:
        "200":
          description: Successfully retrieved a joke
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JokeResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/get-todos:
    get:
      summary: Get todos
      description: Retrieves todo items for a user
      operationId: getTodos
      parameters:
        - name: userId
          in: query
          description: ID of the user to get todos for
          schema:
            type: integer
            default: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dummy:
                  type: string
                  description: Dummy parameter to satisfy system requirements
                  example: "dummy_value"
      responses:
        "200":
          description: Successfully retrieved todos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/post-todos:
    post:
      summary: Create a todo
      description: Creates a new todo item
      operationId: postTodos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoCreateRequest"
      responses:
        "200":
          description: Successfully created a todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/healthcheck:
    get:
      summary: Health Check
      description: Verify the service is running properly
      operationId: healthcheck
      responses:
        "200":
          description: Service is healthy
          content:
            text/plain:
              schema:
                type: string
                example: OK
        "500":
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/handleDataCloudDataChangeEvent:
    post:
      summary: Handle Data Cloud Data Change Event
      description: Processes data change events from Salesforce Data Cloud
      operationId: handleDataCloudDataChangeEvent
      security:
        - salesforceOAuth: []
        - clientContext: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Data Cloud change event payload
      responses:
        "201":
          description: Accepted for processing
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/segments:
    get:
      summary: Get Salesforce Data Cloud Segments
      description: Retrieves all segments from Salesforce Data Cloud
      operationId: getSegments
      security:
        - salesforceOAuth: []
        - clientContext: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dummy:
                  type: string
                  description: Dummy parameter to satisfy system requirements
                  example: "dummy_value"
      responses:
        "200":
          description: List of segments retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SegmentsResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/limits:
    get:
      summary: Get Data Cloud Limits
      description: Retrieves limits information from Salesforce Data Cloud
      operationId: getLimits
      security:
        - salesforceOAuth: []
        - clientContext: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dummy:
                  type: string
                  description: Dummy parameter to satisfy system requirements
                  example: "dummy_value"
      responses:
        "200":
          description: Successfully retrieved limits information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitsResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/activationTargets:
    get:
      summary: Get Data Cloud Activation Targets
      description: Retrieves activation targets from Salesforce Data Cloud
      operationId: getActivationTargets
      security:
        - salesforceOAuth: []
        - clientContext: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dummy:
                  type: string
                  description: Dummy parameter to satisfy system requirements
                  example: "dummy_value"
      responses:
        "200":
          description: Successfully retrieved activation targets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivationTargetsResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
